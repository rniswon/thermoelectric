% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bogen_associate.R
\name{bogen_associate}
\alias{bogen_associate}
\title{bogen_associate}
\usage{
bogen_associate(
  analysisYear,
  inputData.list,
  plantList,
  select_RPM,
  printStatus = T
)
}
\arguments{
\item{analysisYear}{numeric value indicating the year of EIA data present in the `inputData.list`.}

\item{inputData.list}{list object generated by the importThermoEIA::import_EIAData() function 
This data is pulled from the EIA website (https://www.eia.gov/electricity/) for the year 
of 2015 and has been run through the necessary formatting to be used by the EIAplantAssociation 
package.  inputData.list should be in the same format as the example `inputData.list2015` data
object.}

\item{plantList}{data.frame indicating which plants to include in the analysis.  Must contain 
the column "Plant.Code".  The `data("masterPlantList")` data object contains a list of recommended
plants for analysis for the years 2008-2020.}

\item{select_RPM}{vector of character strings indicating which Reported.Prime.Mover types should be
included in the boiler-generator association output.}

\item{printStatus}{TRUE/FALSE indicating whether function status messages should print.}
}
\value{
list object with the following contents \cr \cr 
\tabular{ll}{
`bogen.key` \tab data.frame containing boiler-generator (bogen) associations, flags 
detailed in the `data(ColumnLegend_metafile)`.  To view the `data(ColumnLegend_metafile)` object use 
the `writeColumnLegend_metafile()` function. \cr
`NA.BOILER.ID` \tab data.frame of all Generators that could not be associated with a non-missing Boiler.ID.
Note this does not exclude the plant from the `bogen.key` but condenserDuty will not be calculated at
the boiler-generator level it will be calculated at the Plant.Code-Reported.Prime.Mover level.  See 
Section ... in the EIAplantAssociation vignette. \cr
`bogen` \tab EIA boiler-generator association table with IDs modified using the `formatIDcol()` 
function \cr
`checkPlants` \tab vector of Plant.Codes flagged with "flag_floatingGen" described in 
`data(ColumnLegend_metafile)` and Section ... of the EIAplantAssociation vignette. \cr
`Boiler.ID_NotAssoc` \tab data.frame of Boiler.IDs found in `inputData.list$boilerFuelData` that 
are not present in the EIA boiler-generator association table `inputData.list$bogen` and cannot be
associated by any means other than a string matched flags in the `bogen.key$bga.source` as 
"fillwithGenID". \cr
`compare_RPM` \tab data frame of plants that have inconsistent Reported.Prime.Movers in the EIA
tables present in `inputData.list`.  These plants will be flagged with "flag_RPM" described in the 
`data(ColumnLegend_metafile)` \cr
`missingCSCT` \tab data.frame of Natural Gas Combined Cycle plants with inconsitent data reporting
in the EIA Form-923 across "Page 3 Boiler Fuel Data", "Page 4 Generator Data", and "Page 1 
Generation and Fuel Data".  If data is present on "Page 1 Generation and Fuel Data" and not in
"Page 3 Boiler Fuel Data" and/or "Page 4 Generator Data", the boiler-generator association will take
the form Plant.Code^NGCC and  the `condenserDuty` package will calculate condenser duty using 
"Page 1 Generation and Fuel Data" \cr
`manualPlants` \tab data.frame of Plants flagged for manual boiler-generator association checks and
which manual check flags were triggered.  See `data(ColumnLegend_metafile)` for descriptions of 
manual flags. \cr
`decembrist` \tab vector of Plant.Codes including plants that only reported Fuel Consumption and
Net Generation in the month of December on the EIA Form-923 "Page 3 Boiler Fuel Data" and 
"Page 4 Generator Data".  These plants will have a boiler-generator association in the form of 
Plant.Code^NGCC (for natural gas combined cycle units) or Plant.Code^ST (for steam units) and the
`condenserDuty` package will calculated condenser duty using data from "Page 1 Generation and 
Fuel Data" \cr

}
}
\description{
Creates a list including a data.frame of boiler-generator (bogen) associations
using the `inputData.list$bogen`, `inputData.list$gen_fuel_data`, `inputData.list$boilerFuelData`,
`inputData.list$generation.data`,`inputData.list$gen_860`,`inputData.list$retiredGenerators`,
`inputData.list$boilerDesignData` and the `associate()` function.
}
\examples{
#set arguments
dest<-tempdir()
eia_year<-2015
path_InputData_Metafile<-paste0(dest,.Platform$file.sep,"UserControlCrosswalk2015.xlsx")
path_EIAInputData<-paste0(dest,.Platform$file.sep,eia_year)
outputCSV<-FALSE
path_outputCSV<-dest

#use crosswalk2015 object
useStandardCrosswalk<-TRUE
prepCondenserDuty<-TRUE

#pull data from web
importThermoEIA::eia_webpull(eia_year,dest)


#run import using crosswalk2015
inputData.list<-importThermoEIA::import_EIAData(path_InputData_Metafile,path_EIAInputData,outputCSV,
                              path_outputCSV,prepCondenserDuty = TRUE,eia_year=eia_year,
                              useStandardCrosswalk=useStandardCrosswalk)

#set year for analysis
eia_year<-2015

#select Reported.Prime.Movers to include
select_RPM<-c("CA", "CS", "CT", "ST",NA)

#load MasterPlantList
utils::data("masterPlantList")
plantList<-masterPlantList[masterPlantList$year==eia_year,]

#run boiler-generator associations
bogen.key<-bogen_associate(analysisYear = eia_year,inputData.list,
                                          plantList,select_RPM)

}
