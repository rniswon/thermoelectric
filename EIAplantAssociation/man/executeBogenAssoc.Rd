% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/executeBogenAssoc.R
\name{executeBogenAssoc}
\alias{executeBogenAssoc}
\title{executeBogenAssoc}
\usage{
executeBogenAssoc(
  inputData.list,
  plantList,
  select_RPM = c("CA", "CS", "CT", "ST", NA),
  pathWrite,
  eia_year,
  printStatus = TRUE
)
}
\arguments{
\item{inputData.list}{list object generated by the importThermoEIA::import_EIAData() function 
This data is pulled from the EIA website (https://www.eia.gov/electricity/) for the year 
of 2015 and has been run through the necessary formatting to be used by the EIAplantAssociation 
package.  inputData.list should be in the same format as the example `inputData.list2015` data
object.}

\item{plantList}{data.frame indicating which plants to include in the analysis.  Must contain 
the column "Plant.Code".  The `data("masterPlantList")` data object contains a list of recommended
plants for analysis for the years 2008-2020.}

\item{select_RPM}{vector of character strings indicating which Reported.Prime.Mover types should be
included in the boiler-generator association output.}

\item{pathWrite}{character string path to write bogen association output csv files}

\item{eia_year}{numeric value indicating the year of EIA data present in the `inputData.list`.}

\item{printStatus}{TRUE/FALSE indicating whether function status messages should print.}
}
\value{
list object with the following contents \cr \cr 
\tabular{ll}{
`sheet3_key` \tab data.frame containing boiler-generator (bogen) associations by Boiler.ID \cr
`sheet4_key` \tab data.frame containing boiler-generator (bogen) associations by Generator.ID \cr
`missingCSCT` \tab data.frame of Natural Gas Combined Cycle plants with inconsitent data reporting
in the EIA Form-923 across "Page 3 Boiler Fuel Data", "Page 4 Generator Data", and "Page 1 
Generation and Fuel Data".  If data is present on "Page 1 Generation and Fuel Data" and not in
"Page 3 Boiler Fuel Data" and/or "Page 4 Generator Data", the boiler-generator association will take
the form Plant.Code^NGCC and  the `condenserDuty` package will calculate condenser duty using 
"Page 1 Generation and Fuel Data" \cr
`NA.BOILER.ID` \tab data.frame of all Generators that could not be associated with a non-missing Boiler.ID.
Note this does not exclude the plant from the `bogen.key` but condenserDuty will not be calculated at
the boiler-generator level it will be calculated at the Plant.Code-Reported.Prime.Mover level.  See 
Section ... in the EIAplantAssociation vignette. \cr
`Boiler.ID_NotAssoc` \tab data.frame of Boiler.IDs found in `inputData.list$boilerFuelData` that 
are not present in the EIA boiler-generator association table `inputData.list$bogen` and cannot be
associated by any means other than a string matched flags in the `bogen.key$bga.source` as 
"fillwithGenID". \cr
`bogen.key` \tab data.frame containing boiler-generator (bogen) associations, flags 
detailed in the `data(ColumnLegend_metafile)`.  To view the `data(ColumnLegend_metafile)` object use 
the `writeColumnLegend_metafile()` function. \cr
`binary_Auto3` \tab data.frame of all flags in `sheet3_key` as binary (0 or 1) \cr
`binary_Auto4` \tab data.frame of all flags in `sheet4_key` as binary (0 or 1) \cr
`bf.923.ungrouped` data.frame of monthly Fuel Heat by line in `inputData.list$boilerFuelData` \cr
`generation.data.line124` data.frame of monthly Net Generation by line in 
`inputData.list$generation.data` \cr
`bf.gb` data.frame of monthly Fuel Heat by Boiler.ID \cr
`generation.data.gb` data.frame of monthly Net Generation by Generator.ID \cr
`sumFuelHeatByBogen` data.frame of monthly Fuel Heat by Bogen \cr
`sumNetGenByBogen` data.frame of monthly Net Generation by Bogen \cr
`thermalEffByBogen` data.frame of monthly Thermal Efficiency by Bogen \cr

}
}
\description{
Creates a list including a data.frame of boiler-generator (bogen) associations
using the `inputData.list$bogen`, `inputData.list$gen_fuel_data`, `inputData.list$boilerFuelData`,
`inputData.list$generation.data`,`inputData.list$gen_860`,`inputData.list$retiredGenerators`,
`inputData.list$boilerDesignData` and the `bogen_associate()` function.
}
\examples{
#set arguments
dest<-tempdir()
eia_year<-2015
path_InputData_Metafile<-paste0(dest,.Platform$file.sep,"UserControlCrosswalk2015.xlsx")
path_EIAInputData<-paste0(dest,.Platform$file.sep,eia_year)
outputCSV<-FALSE
path_outputCSV<-dest

#use crosswalk2015 object
useStandardCrosswalk<-TRUE
prepCondenserDuty<-TRUE

#pull data from web
importThermoEIA::eia_webpull(eia_year,dest)


#run import using crosswalk2015
inputData.list<-importThermoEIA::import_EIAData(path_InputData_Metafile,path_EIAInputData,outputCSV,
                              path_outputCSV,prepCondenserDuty = TRUE,eia_year=eia_year,
                              useStandardCrosswalk=useStandardCrosswalk)

#set year for analysis
eia_year<-2015

#select Reported.Prime.Movers to include
select_RPM<-c("CA", "CS", "CT", "ST",NA)

#load MasterPlantList
utils::data("masterPlantList")
plantList<-masterPlantList[masterPlantList$year==eia_year,]

#set output path
pathWrite<-tempDir()

#run boiler-generator associations
bogen.out.list<-executeBogenAssoc(inputData.list,plantList,
                           select_RPM,pathWrite,eia_year)

}
