% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/full_join_track.R
\name{full_join_track}
\alias{full_join_track}
\title{full_join_track}
\usage{
full_join_track(
  x,
  y,
  by = NULL,
  suffix = c(".x", ".y"),
  .merge = FALSE,
  printMessages = FALSE,
  ...
)
}
\arguments{
\item{x}{left data.frame object, must contain all columns found in `by`}

\item{y}{right data.frame object, must contain all columns found in `by`}

\item{by}{A character vector of variables to join by. If NULL, the default, `*_join()` will
perform a natural join, using all variables in common across x and y. A message lists 
the variables so that you can check they're correct; suppress the message by supplying by 
explicitly.}

\item{suffix}{If there are non-joined duplicate variables in x and y, these suffixes 
will be added to the output to disambiguate them. Should be a character vector of length 2.}

\item{.merge}{TRUE/FALSE indicating whether an additional variable ".merge" should be added
to the output data.frame indicating whether the data is from "left_only", "right_only" or 
"matched"}

\item{printMessages}{TRUE/FALSE indicating whether number or rows from left data.frame,
number of rows from right data.frame, and number of rows matched should be printed to the 
console}

\item{...}{Other parameters passed onto methods.}
}
\value{
An object of the same type as `x`. The order of the rows and columns of x is preserved 
as much as possible. All `x` rows, followed by unmatched `y` rows. 
Rows will be duplicated if one or more rows in `x` matches multiple rows in `y`. ".merge" column
included if `.merge`=TRUE. For more details on join structure see `dplyr::full_join`
}
\description{
merge two data frames while keeping track of mismatches using custom 
application of`dplyr::full_join` \cr \cr
}
\examples{
x<-data.frame(Plant.Code=c(3,3,3,3),ID=c("01","1","02","CT02"))
y<-data.frame(Plant.Code=c(3,3,3,56),ID=c("01","1","2","CT02"))
full_join_track(x,y,by=c("Plant.Code","ID"),.merge=TRUE,printMessages=TRUE)
}
